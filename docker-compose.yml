version: "2"
services:
  web:
    build: ./web
    command: sh -c "ls &&
                    mkdir -p static &&
                    python manage.py collectstatic --no-input &&
                    gunicorn --bind 0.0.0.0:8000 --workers 2 --log-level debug --timeout 60 fleshlight.wsgi:application --reload"
    ports:
      - "8000:8000"
    environment:
      POSTGRES_DB: '${POSTGRES_DATABASE}'
      POSTGRES_USER: '${POSTGRES_USER}'
      POSTGRES_PASSWORD: '${POSTGRES_PASSWORD}'
      POSTGRES_HOST: "${POSTGRES_HOST}"
      SERVER: "${SERVER}"
      REDIS_USER: "${REDIS_USER}"
      REDIS_PASSWORD: "${REDIS_PASSWORD}"
    volumes:
      - /static:/web/static
      - /home/tttttv/controlMeters/web:/web
    depends_on:
      - db
  celery:
    build: ./web
    command: sh -c "celery -A controlMeters worker --loglevel=info --concurrency 1 -E"
    environment:
      POSTGRES_DB: '${POSTGRES_DATABASE}'
      POSTGRES_USER: '${POSTGRES_USER}'
      POSTGRES_PASSWORD: '${POSTGRES_PASSWORD}'
      POSTGRES_HOST: "${POSTGRES_HOST}"
      SERVER: "${SERVER}"
      REDIS_USER: "${REDIS_USER}"
      REDIS_PASSWORD: "${REDIS_PASSWORD}"
    volumes:
      - /static:/web/static
      - /home/tttttv/controlMeters/web:/web
    depends_on:
      - redis
  celery-beat:
    build: ./web
    command: sh -c "celery -A controlMeters beat -l info"
    environment:
      POSTGRES_DB: '${POSTGRES_DATABASE}'
      POSTGRES_USER: '${POSTGRES_USER}'
      POSTGRES_PASSWORD: '${POSTGRES_PASSWORD}'
      POSTGRES_HOST: "${POSTGRES_HOST}"
      SERVER: "${SERVER}"
      REDIS_USER: "${REDIS_USER}"
      REDIS_PASSWORD: "${REDIS_PASSWORD}"
    volumes:
      - /static:/web/static
      - /home/tttttv/controlMeters/web:/web
    depends_on:
      - redis
  redis:
    build: ./redis
    privileged: true
    command: sh -c "./init.sh"
    volumes:
      - redis_data:/data:rw
    ports:
      - "6379:6379"
    environment:
      REDIS_USER: "${REDIS_USER}"
      REDIS_PASSWORD: "${REDIS_PASSWORD}"
  nginx:
    build: ./nginx
    ports:
      - "80:80"
      - "443:443"
      - "9006:9006"
    volumes:
      - /static:/static
      - media:/media
      - /ssl:/ssl
    depends_on:
      - web
  db:
    image: postgres:14
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: '${POSTGRES_DATABASE}'
      POSTGRES_USER: '${POSTGRES_USER}'
      POSTGRES_PASSWORD: '${POSTGRES_PASSWORD}'
      POSTGRES_HOST: "${POSTGRES_HOST}"
    volumes:
      - postgres:/var/lib/postgresql/data
volumes:
  postgres:
  static:
  media:
  ssl:
  web:
  redis_data:
    driver: local